<Project>
  
  <!-- Global Properties for all projects -->
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors />
    <WarningsNotAsErrors />
    <EnforceCodeStyleInBuild>false</EnforceCodeStyleInBuild>
    <EnableNETAnalyzers>false</EnableNETAnalyzers>
    <AnalysisLevel>none</AnalysisLevel>
    <!-- <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)DDD.CleanArchitecture.ruleset</CodeAnalysisRuleSet> -->
    <_SkipUpgradeNetAnalyzersNuGetWarning>true</_SkipUpgradeNetAnalyzersNuGetWarning>
    <GenerateEditorConfigFile>false</GenerateEditorConfigFile>
    <DisableImplicitAnalyzerConfigIncludes>true</DisableImplicitAnalyzerConfigIncludes>
    <SkipAnalyzers>true</SkipAnalyzers>
    <RunAnalyzersDuringBuild>false</RunAnalyzersDuringBuild>
  </PropertyGroup>

  <!-- Global Package References -->
  <ItemGroup>
    <!-- Temporarily disable all analyzers to fix config conflict
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.507">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="8.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    -->
  </ItemGroup>

  <!-- Global Analyzer Config -->
  <ItemGroup>
    <!-- Temporarily disable to fix multiple analyzer config error
    <GlobalAnalyzerConfigFiles Include="$(MSBuildThisFileDirectory).globalconfig" />
    <EditorConfigFiles Include="$(MSBuildThisFileDirectory).editorconfig" />
    -->
  </ItemGroup>

  <!-- Domain Layer Specific Rules -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Domain'))">
    <DefineConstants>$(DefineConstants);DOMAIN_LAYER</DefineConstants>
  </PropertyGroup>

  <!-- Application Layer Specific Rules -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Application'))">
    <DefineConstants>$(DefineConstants);APPLICATION_LAYER</DefineConstants>
  </PropertyGroup>

  <!-- Infrastructure Layer Specific Rules -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Infrastructure'))">
    <DefineConstants>$(DefineConstants);INFRASTRUCTURE_LAYER</DefineConstants>
  </PropertyGroup>

  <!-- API Layer Specific Rules -->
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('Api'))">
    <DefineConstants>$(DefineConstants);API_LAYER</DefineConstants>
  </PropertyGroup>

  <!-- Domain Layer: No external dependencies except System -->
  <ItemGroup Condition="$(MSBuildProjectName.Contains('Domain'))">
    <!-- Domain should only reference BCrypt for password hashing (exception) -->
    <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
    <PackageReference Include="MediatR.Contracts" Version="2.0.1" />
  </ItemGroup>

  <!-- Application Layer: Can reference Domain and MediatR -->
  <ItemGroup Condition="$(MSBuildProjectName.Contains('Application'))">
    <PackageReference Include="MediatR" Version="12.2.0" />
    <PackageReference Include="FluentValidation" Version="11.8.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.0" />
  </ItemGroup>

  <!-- Infrastructure Layer: Can reference Application and external dependencies -->
  <ItemGroup Condition="$(MSBuildProjectName.Contains('Infrastructure'))">
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Abstractions" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.0" />
  </ItemGroup>

  <!-- API Layer: Can reference Application and Infrastructure -->
  <ItemGroup Condition="$(MSBuildProjectName.Contains('Api'))">
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="8.0.0" />
  </ItemGroup>

  <!-- Test Projects -->
  <ItemGroup Condition="$(MSBuildProjectName.Contains('Test'))">
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />
    <PackageReference Include="xunit" Version="2.6.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.5.3" />
    <PackageReference Include="FluentAssertions" Version="6.12.0" />
    <PackageReference Include="Moq" Version="4.20.69" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="8.0.0" />
  </ItemGroup>

  <!-- Source Link for better debugging -->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
  </ItemGroup>

</Project>
