version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: licensify-postgres
    environment:
      POSTGRES_DB: licensify
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - licensify-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: licensify-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - licensify-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: licensify-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - licensify-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: licensify-auth-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=licensify;Username=postgres;Password=postgres123
      - Redis__ConnectionString=redis:6379
      - JWT__Secret=your-super-secret-jwt-key-min-32-chars
      - JWT__Issuer=licensify
      - JWT__Audience=licensify-users
    ports:
      - "5001:80"
    depends_on:
      - postgres
      - redis
    networks:
      - licensify-network

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: licensify-product-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=licensify;Username=postgres;Password=postgres123
    ports:
      - "5002:80"
    depends_on:
      - postgres
    networks:
      - licensify-network

  # License Service
  license-service:
    build:
      context: ./services/license-service
      dockerfile: Dockerfile
    container_name: licensify-license-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=licensify;Username=postgres;Password=postgres123
      - Redis__ConnectionString=redis:6379
      - RabbitMQ__ConnectionString=amqp://admin:admin123@rabbitmq:5672
    ports:
      - "5003:80"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - licensify-network

  # Audit Service
  audit-service:
    build:
      context: ./services/audit-service
      dockerfile: Dockerfile
    container_name: licensify-audit-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongo:27017
      - MongoDB__DatabaseName=licensify_audit
      - RabbitMQ__ConnectionString=amqp://admin:admin123@rabbitmq:5672
    ports:
      - "5004:80"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - licensify-network

  # MongoDB for Audit Service
  mongo:
    image: mongo:6
    container_name: licensify-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - licensify-network

  # Admin Panel Frontend
  admin-panel:
    build:
      context: ./frontend/admin-panel
      dockerfile: Dockerfile
    container_name: licensify-admin-panel
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      - nginx
    networks:
      - licensify-network

  # Nginx API Gateway
  nginx:
    image: nginx:alpine
    container_name: licensify-nginx
    ports:
      - "8080:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - product-service
      - license-service
      - audit-service
    networks:
      - licensify-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  mongo_data:

networks:
  licensify-network:
    driver: bridge
